apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-provisioner
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: external-provisioner-runner
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: csi-provisioner-role
subjects:
  - kind: ServiceAccount
    name: csi-provisioner
    namespace: csi-plugins-azurefile
roleRef:
  kind: ClusterRole
  name: external-provisioner-runner
  apiGroup: rbac.authorization.k8s.io
---
kind: StatefulSet
apiVersion: apps/v1beta1
metadata:
  name: csi-provisioner
spec:
  serviceName: csi-provisioner
  replicas: 1
  template:
    metadata:
      labels:
        app: csi-provisioner
    spec:
      serviceAccount: csi-provisioner
      containers:
        - name: csi-provisioner
          image: quay.io/k8scsi/csi-provisioner:v0.2.0
          args:
            - "--provisioner=csi-azurefile"
            - "--csi-address=$(CSI_ENDPOINT)"
            - "--v=5"
          env:
            - name: CSI_ENDPOINT
              value: /var/lib/kubelet/plugins/csi-azurefile/csi.sock
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/kubelet/plugins/csi-azurefile
        - name: plugin
          imagePullPolicy: Always
          image: karataliu/csi-azurefile:4
          env:
            - name: CSI_ENDPOINT
              value: /var/lib/kubelet/plugins/csi-azurefile/csi.sock
            - name: CSI_SERVICE_DISABLE_NODE
              value: '1'
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/kubelet/plugins/csi-azurefile
      volumes:
        - name: socket-dir
          emptyDir:
